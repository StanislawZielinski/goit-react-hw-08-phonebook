{"version":3,"file":"static/js/796.f2956afc.chunk.js","mappings":"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","sources":["components/Form/Form.jsx","components/DeleteBtn/DeleteBtn.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","components/UpdateModal/UpdateModal.jsx","components/UpdateForm/UpdateForm.jsx","components/phonebook/Phonebook.jsx","pages/Contacts.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Form.css';\n\nconst Form = ({handleSubmit}) => {\n\n    return (\n            <form className=\"form\" onSubmit={handleSubmit}>\n            <p className=\"title\">Add new contact</p>\n            <div className=\"input-wrapper\">\n                <label className=\"label\">Name\n                    <input\n                    className=\"input\"\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    />\n                </label>\n                <label className=\"label\">Phone number\n                    <input\n                        className=\"input\"\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        />\n                </label>\n            </div>\n                <button className=\"button\" type=\"submit\">Add contact</button>\n            </form>\n    )\n}\n\nexport default Form\n\nForm.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './DeleteBtn.css';\n\nconst DeleteBtn = ({deleteContact, id}) => {\n            return (\n                <button className=\"button-contact\" onClick={()=>deleteContact(id)}>delete</button>\n            )\n} \nexport default DeleteBtn\n\nDeleteBtn.propTypes = {\n    deleteContact: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({onChange}) => {\n        return (\n            <div>\n                <p className=\"title\">Contacts</p>\n                <p className=\"filter-title\">filter contacts by name</p>\n                <input className=\"input\" onChange={onChange} />\n            </div>\n    )}\n\nexport default Filter\n\nFilter.propTypes = {\n    onChange: PropTypes.func.isRequired,\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Contacts.css';\n\nconst Contacts = ({ renderContacts, contacts, filter }) => {   \n    return (\n        <ul className=\"contactsList-wrapper\">{renderContacts(contacts, filter)}</ul>\n    )\n}\n\nContacts.propTypes = {\n    renderContacts: PropTypes.func.isRequired,\n    filter: PropTypes.string,\n    contacts: PropTypes.array,\n}\n\nexport default Contacts","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport \"../DeleteBtn/DeleteBtn.css\";\nimport PropTypes from \"prop-types\";\n\nconst UpdateModal = ({children}) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  \n  return (\n    <div>\n      <button className='button-contact-update' onClick={handleShow}>\n        update\n      </button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Update</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{children}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          {/* <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button> */}\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nUpdateModal.propTypes = {\n  children: PropTypes.object.isRequired,\n}\n\nexport default UpdateModal","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../Form/Form.css\";\n\nconst UpdateForm = ({handleUpdate, id, name, number}) => {\n    return (\n            <form className=\"form\" onSubmit={(e)=>handleUpdate(e, id)}>\n            <div className=\"input-wrapper\">\n                <label className=\"label\">Name\n                    <input\n                    placeholder={name}\n                    className=\"input\"\n                    type=\"text\"\n                    name=\"newName\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    />\n                </label>\n                <label className=\"label\">Phone number\n                    <input\n                        className=\"input\"\n                        placeholder={number}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        />\n                </label>\n            </div>\n                <button className=\"button\" type=\"submit\">Update</button>\n            </form>\n    )\n}\n\nexport default UpdateForm\n\nUpdateForm.propTypes = {\n    handleUpdate: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}","import React from \"react\";\nimport \"./Phonebook.css\"\nimport Form from \"../Form/Form\";\nimport DeleteBtn from \"components/DeleteBtn/DeleteBtn\";\nimport Filter from \"../Filter/Filter\"\nimport Contacts from \"../Contacts/Contacts\";\nimport {  filterContact } from \"../../redux/contactsSlice\";\nimport { useGetPostsQuery, useAddNewPostMutation, useDeletePostMutation, useUpdateContactMutation } from \"../../redux/apiSlice\";\nimport { Audio } from 'react-loader-spinner';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Notiflix from 'notiflix';\nimport UpdateModal from \"../UpdateModal/UpdateModal\";\nimport UpdateForm from \"../UpdateForm/UpdateForm\";\n\n\nconst Phonebook = () => {\n\n    const { data, isLoading, isSuccess, isError, error } = useGetPostsQuery();\n    const [addNewContact] = useAddNewPostMutation();\n    const [deleteContact] = useDeletePostMutation();\n    const [updateContact] = useUpdateContactMutation();\n    const dispatch = useDispatch();\n    const filterStore = useSelector(state => state.contacts.filter);\n    const isLoggedIn = useSelector(state => state.isLogged.isLogged);\n\n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n        const form = evt.currentTarget;\n        const name = form.elements.name.value;\n        const phoneNumber = form.elements.number.value;\n        const canSave = [name, phoneNumber, isLoggedIn].every(Boolean) && !isLoading;\n        for (const contact of data) {\n            if (contact.name.includes(name)) {\n                Notiflix.Notify.failure(`${name} is already in contacts`)\n                return\n            }  \n        };\n\n        if (canSave) {\n            try {\n                Notiflix.Loading.standard('wait...');\n                Notiflix.Loading.remove(2500);\n                await addNewContact ({ name, number: phoneNumber }).unwrap();\n            }\n            catch (error) {\n                alert(\"Failed to add contact\")\n            }\n        }\n    }\n\n    const deleteItem = async (id) => {\n        Notiflix.Loading.standard('wait...');\n        Notiflix.Loading.remove(2500);\n        await deleteContact(id);\n    };\n\n    const handleUpdate = async (evt, id) => {\n        evt.preventDefault();\n        const form = evt.currentTarget;\n        const newName = form.elements.newName.value;\n        const phoneNumber = form.elements.number.value;\n        console.log(newName);\n        console.log(phoneNumber);\n        const canSave = [newName, phoneNumber].every(Boolean) && !isLoading;\n        for (const contact of data) {\n            if (contact.name.includes(newName)) {\n                Notiflix.Notify.failure(`${newName} is already in contacts`)\n                return\n            }  \n        };\n\n        if (canSave) {\n            try {\n                Notiflix.Loading.standard('wait...');\n                Notiflix.Loading.remove(2500);\n                await updateContact ({ id, name:newName, number: phoneNumber });\n            }\n            catch (error) {\n                alert(\"Failed to add contact\")\n            }\n        }\n\n    };\n\n\n        const renderContacts = (contacts, filter) => {\n            if (!filter) {\n                if (isLoading) {\n                    return <Audio/>\n                }\n                else if (isSuccess) {\n                    return contacts.map(contact => {\n                        return <li className=\"contact-list-item\" key={contact.id}>\n                            <div className=\"contacts\" >{contact.name}: {contact.number}\n                                <div className=\"contacts-btn\">\n                                    <UpdateModal children={<UpdateForm handleUpdate={handleUpdate} \n                                    id={contact.id} name={contact.name} number={contact.number}/>} />\n                                    <DeleteBtn deleteContact={deleteItem} id={contact.id} />\n                                </div>\n                            </div>\n                        </li>\n                    })\n                }\n                else if (isError){\n                    return <div>{error.toString()}</div>\n                }\n            }\n        \n        const filterFunction = contacts.filter((el) => el.name.toLowerCase().includes(filter.toLowerCase()));\n    \n        return (\n            filterFunction.map(contact =>\n            {\n                return <li className=\"contact-list-item\" key={contact.id}>\n                    <div className=\"contacts\" >{contact.name}: {contact.number}\n                        <div className=\"contacts-btn\">\n                            <UpdateModal children={<UpdateForm handleUpdate={handleUpdate} \n                            id={contact.id} name={contact.name} number={contact.number}/>} />\n                            <DeleteBtn deleteContact={deleteItem} id={contact.id} />\n                         </div>\n                    </div>\n                </li>\n            })\n        )\n    }\n\n\n    const onChange = (evt) => {\n        dispatch(filterContact(evt.target.value));\n    };   \n return (\n            <div>\n                <Form handleSubmit={handleSubmit} />\n                    <div className=\"contacts-wrapper\">\n                    <Filter onChange={onChange} />\n                    <Contacts renderContacts={renderContacts}\n                    contacts={data} filter={filterStore}/>\n                    \n                </div>\n            </div>\n    )\n}\nexport default Phonebook","import Phonebook from '../components/phonebook/Phonebook';\nimport React from 'react';\n\n\n\nconst Contacts = () => {\n\n  return (\n    <div>\n      <Phonebook/>\n    </div>\n  )\n}\n\nexport default Contacts\n"],"names":["handleSubmit","className","onSubmit","type","name","pattern","title","required","deleteContact","id","onClick","onChange","renderContacts","contacts","filter","children","useState","show","setShow","handleClose","Modal","onHide","closeButton","Button","variant","handleUpdate","number","e","placeholder","useGetPostsQuery","data","isLoading","isSuccess","isError","error","useAddNewPostMutation","addNewContact","useDeletePostMutation","useUpdateContactMutation","updateContact","dispatch","useDispatch","filterStore","useSelector","state","isLoggedIn","isLogged","evt","preventDefault","form","currentTarget","elements","value","phoneNumber","canSave","every","Boolean","includes","Notiflix","unwrap","alert","deleteItem","newName","console","log","filterContact","target","map","contact","toString","el","toLowerCase"],"sourceRoot":""}